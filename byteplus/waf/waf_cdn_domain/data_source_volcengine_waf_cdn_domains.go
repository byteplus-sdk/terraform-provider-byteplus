package waf_cdn_domain

import (
	"github.com/hashicorp/terraform-plugin-sdk/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/helper/validation"
	ve "github.com/volcengine/terraform-provider-volcengine/common"
)

func DataSourceVolcengineWafCdnDomains() *schema.Resource {
	return &schema.Resource{
		Read: dataSourceVolcengineWafCdnDomainsRead,
		Schema: map[string]*schema.Schema{
			"name_regex": {
				Type:         schema.TypeString,
				Optional:     true,
				ValidateFunc: validation.StringIsValidRegExp,
				Description:  "A Name Regex of Resource.",
			},
			"output_file": {
				Type:        schema.TypeString,
				Optional:    true,
				Description: "File name where to save data source results.",
			},
			"total_count": {
				Type:        schema.TypeInt,
				Computed:    true,
				Description: "The total count of query.",
			},
			"domain": {
				Type:        schema.TypeString,
				Optional:    true,
				Description: "The domain name of the protected website that needs to be queried.",
			},
			"accurate_query": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "Matching mode.",
			},
			"data": {
				Description: "The collection of query.",
				Type:        schema.TypeList,
				Computed:    true,
				Elem: &schema.Resource{
					Schema: map[string]*schema.Schema{
						"region": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "domain region that need to be protected by WAF.",
						},
						"domain": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "domain names that need to be protected by WAF.",
						},
						"advanced_defense_ip": {
							Type:     schema.TypeString,
							Computed: true,
							Description: "IP address of Advanced DDoS Protection instance." +
								" Displayed if the instance is provisioned via Advanced DDoS Protection, otherwise, it is null.",
						},
						"advanced_defense_ipv6": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "Advanced Defense IPv6. Displayed if the instance is provisioned via Advanced DDoS Protection, otherwise, it is null.",
						},
						"cname": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "The CNAME value generated by the WAF instance.",
						},
						"certificate_id": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Certificate ID, displayed when the protocol type includes HTTPS.",
						},
						"certificate_name": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "Certificate name, displayed when the protocol type includes HTTPS.",
						},
						"lb_algorithm": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "The types of load balancing algorithms.",
						},
						"access_mode": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Access mode. If your domain is added from BytePlus CDN, this parameter is set to 6.",
						},
						"cloud_access_config": {
							Type:     schema.TypeList,
							Computed: true,
							Description: "Displayed when cloud WAF instance is provisioned through load balancing, otherwise, it is null. " +
								"If your domain is added from BytePlus CDN, the value is null.",
							Elem: &schema.Resource{
								Schema: map[string]*schema.Schema{
									"instance_id": {
										Type:        schema.TypeString,
										Computed:    true,
										Description: "The ID of instance.",
									},
									"listener_id": {
										Type:        schema.TypeString,
										Computed:    true,
										Description: "The ID of listener.",
									},
									"protocol": {
										Type:        schema.TypeString,
										Computed:    true,
										Description: "The protocol type of the forwarding rule.",
									},
									"port": {
										Type:        schema.TypeString,
										Computed:    true,
										Description: "The port number of the forwarding rule.",
									},
									"access_protocol": {
										Type:        schema.TypeString,
										Computed:    true,
										Description: "Protocol type.",
									},
								},
							},
						},
						"public_real_server": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Back-to-origin mode of CNAME provisioning." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"vpc_id": {
							Type:     schema.TypeString,
							Computed: true,
							Description: "VPC ID, displayed when the back-to-origin method is set as Private IP address within VPC ( PublicRealServer=0). " +
								"If your domain is added from BytePlus CDN, the value is null.",
						},
						"protocol_ports": {
							Type:     schema.TypeList,
							MaxItems: 1,
							Computed: true,
							Description: "Back-to-origin port. " +
								"If your domain is added from BytePlus CDN, the value is null.",
							Elem: &schema.Resource{
								Schema: map[string]*schema.Schema{
									"http": {
										Type:     schema.TypeList,
										Computed: true,
										Elem: &schema.Schema{
											Type: schema.TypeInt,
										},
										Description: "Back-to-origin port numbers for the HTTP protocol.",
									},
									"https": {
										Type:     schema.TypeList,
										Computed: true,
										Elem: &schema.Schema{
											Type: schema.TypeInt,
										},
										Description: "Back-to-origin port numbers for the HTTPS protocol.",
									},
								},
							},
						},
						"enable_http2": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Whether HTTP 2.0 is enabled." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"enable_ipv6": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Whether IPv6 request is enabled." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"backend_groups": {
							Type:     schema.TypeList,
							Computed: true,
							Description: "Details of the origin servergroup. " +
								"If your domain is added from BytePlus CDN, the value is null.",
							Elem: &schema.Resource{
								Schema: map[string]*schema.Schema{
									"access_port": {
										Type:     schema.TypeList,
										Computed: true,
										Elem: &schema.Schema{
											Type: schema.TypeInt,
										},
										Description: "Access port number.",
									},
									"backends": {
										Type:        schema.TypeList,
										Computed:    true,
										Description: "Details of the origin server group.",
										Elem: &schema.Resource{
											Schema: map[string]*schema.Schema{
												"protocol": {
													Type:        schema.TypeString,
													Computed:    true,
													Description: "Protocol of origin server.",
												},
												"ip": {
													Type:        schema.TypeString,
													Computed:    true,
													Description: "IP address of origin server.",
												},
												"port": {
													Type:        schema.TypeInt,
													Computed:    true,
													Description: "Port number of the origin server.",
												},
												"weight": {
													Type:        schema.TypeInt,
													Computed:    true,
													Description: "The weight of the origin server.",
												},
											},
										},
									},
									"name": {
										Type:        schema.TypeString,
										Computed:    true,
										Description: "Name of the origin server group.",
									},
								},
							},
						},
						"protocol_follow": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Whether the protocol following is enabled." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_config": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Whether the proxy configuration is enabled." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"client_ip_location": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Method to obtain client IP. " +
								"If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"custom_header": {
							Type:     schema.TypeList,
							Computed: true,
							Description: "After setting the client IP acquisition method to a custom field, it will display." +
								" If your domain is added from BytePlus CDN, the value is null.",
							Elem: &schema.Schema{
								Type: schema.TypeString,
							},
						},
						"tls_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the Torch Log Service is enabled.",
						},
						"ssl_protocols": {
							Type:     schema.TypeList,
							Computed: true,
							Elem: &schema.Schema{
								Type: schema.TypeString,
							},
							Description: "TLS protocol version." +
								" If your domain is added from BytePlus CDN, the value is null.",
						},
						"ssl_ciphers": {
							Type:     schema.TypeList,
							Computed: true,
							Elem: &schema.Schema{
								Type: schema.TypeString,
							},
							Description: "TLS encryption cipher suite." +
								" If your domain is added from BytePlus CDN, the value is null.",
						},
						"client_max_body_size": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Maximum client request body size." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"keep_alive_time_out": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Long connection keep-alive time." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"keep_alive_request": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Long connection reuse count." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_connect_time_out": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Timeout for establishing connection between WAF and the backend server." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_read_time_out": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Timeout for WAF to read response from the backend server. " +
								"If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_keep_alive_time_out": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Idle persistent connection timeout." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_retry": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Retry count from WAF to the origin server. " +
								"If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_write_time_out": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "The timeout for WAF to transfer requests to the backend server." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"proxy_keep_alive": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "The number of reusable long connections for WAF to the origin server." +
								" If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"attack_status": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "The status of the attack.",
						},
						"defence_mode": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Protection mode of the instance.",
						},
						"enable_sni": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Whether the SNI configuration is enabled. " +
								"If your domain is added from BytePlus CDN, the default value is set to 0.",
						},
						"custom_sni": {
							Type:     schema.TypeString,
							Computed: true,
							Description: "Custom SNI domain name. " +
								"If your domain is added from BytePlus CDN, the value is null.",
						},
						"project_name": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "The name of project.",
						},
						"project_follow": {
							Type:     schema.TypeInt,
							Computed: true,
							Description: "Set whether to follow the project to which other resources belong, such as the CDN's project. The default value is set to 0." +
								"0: Do not follow" +
								"1: Follow",
						},
						"status": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Connection status.",
						},
						"waf_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the vulnerability protection policy is enabled.",
						},
						"cc_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the cc protection strategy has been enabled.",
						},
						"white_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the whitelist strategy has been enabled.",
						},
						"black_ip_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the blacklist strategy has been enabled.",
						},
						"black_lct_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the regional ban strategy has been activated.",
						},
						"waf_white_req_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether to enable the whitening strategy for vulnerability protection requests.",
						},
						"white_field_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether to enable the whitening strategy for vulnerability protection fields.",
						},
						"custom_rsp_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the custom response interception strategy has been enabled.",
						},
						"system_bot_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the managed Bot classification strategy has been enabled.",
						},
						"custom_bot_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the custom Bot classification strategy has been enabled.",
						},
						"dlp_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether to activate the strategy for preventing the leakage of sensitive information.",
						},
						"api_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether the API protection policy has been enabled.",
						},
						"tamper_proof_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether to enable the page tamper proof policy.",
						},
						"auto_cc_enable": {
							Type:        schema.TypeInt,
							Computed:    true,
							Description: "Whether to enable the intelligent CC protection strategy.",
						},
						"src_ips": {
							Type:     schema.TypeString,
							Computed: true,
							Description: "Back-to-origin IP of WAF instance. " +
								"If your domain is added from BytePlus CDN, the value is null.",
						},
						"update_time": {
							Type:        schema.TypeString,
							Computed:    true,
							Description: "The update time.",
						},
						"server_ips": {
							Type:     schema.TypeString,
							Computed: true,
							Description: "WAF instance IP." +
								" If your domain is added from BytePlus CDN, the value is null.",
						},
						"protocols": {
							Type:     schema.TypeString,
							Computed: true,
							Description: "Protocols of provisioning. " +
								"If your domain is added from BytePlus CDN, the value is null.",
						},
					},
				},
			},
		},
	}
}

func dataSourceVolcengineWafCdnDomainsRead(d *schema.ResourceData, meta interface{}) error {
	service := NewWafCdnDomainService(meta.(*ve.SdkClient))
	return service.Dispatcher.Data(service, d, DataSourceVolcengineWafCdnDomains())
}
